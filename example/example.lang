func nameF(params) async {
    println(params);
    return "Done " + params;
}

func awaitable() async {
    local x = await nameF("Awaitable function called");
    println("awaitable::x", x);
    return 69420;
}

func asyncFn() async {
    println("Begin");
    local x = await awaitable();
    println("Continue", x);
    await awaitable();
    return 1;
}

var x = asyncFn();
println("Naahhh!!");
println(x);

func immediate() async {
    return "Hello";
}

println(">>", immediate());

var xx = 
    if (3 < 2)  
        322 
    else 
        220
    ;

println(xx);

var gg = (2 + 2) switch {
    | [1,2,3] => 200;
    | [4,5,6] => 300;
    | => 20;
    ;
};

println("GG:", gg);

func bbbb() {
    println("hello");
    return 1;
}

func cccc() {
    local x = bbbb();
    println("cccc->x", x);
}

cccc();

for (i in 0..10) {
    if (i == 5) {
        continue;
    }
    println(i);
}
